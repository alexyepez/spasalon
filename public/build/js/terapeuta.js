let pasoTerapeuta=1;const pasoInicialTerapeuta=1,pasoFinalTerapeuta=3;function iniciarAppTerapeuta(){mostrarSeccionTerapeuta(),tabsTerapeuta(),botonesPaginadorTerapeuta(),paginaSiguienteTerapeuta(),paginaAnteriorTerapeuta(),asignarEventosBotonesCitas()}function mostrarSeccionTerapeuta(){const e=document.querySelector("#app .seccion.mostrar");e&&e.classList.remove("mostrar");const t=`#paso-${pasoTerapeuta}`,a=document.querySelector(`#app .seccion${t}`);a?a.classList.add("mostrar"):console.error("No se encontró la sección:",t);const r=document.querySelector("#app .tabs button.actual");r&&r.classList.remove("actual");const o=document.querySelector(`#app .tabs button[data-paso="${pasoTerapeuta}"]`);o?o.classList.add("actual"):console.error("No se encontró el tab:",`[data-paso="${pasoTerapeuta}"]`),2===pasoTerapeuta?setTimeout(inicializarIndicadorScroll,100):3===pasoTerapeuta&&(cargarHistorialTratamientos(),setTimeout(inicializarIndicadoresScrollHistorial,500))}function tabsTerapeuta(){document.querySelectorAll("#app .tabs button").forEach((e=>{e.addEventListener("click",(function(e){pasoTerapeuta=parseInt(e.target.dataset.paso),mostrarSeccionTerapeuta(),botonesPaginadorTerapeuta()}))}))}function botonesPaginadorTerapeuta(){const e=document.querySelector("#app .paginacion #anterior"),t=document.querySelector("#app .paginacion #siguiente");e&&t?(e.classList.remove("ocultar"),t.classList.remove("ocultar"),1===pasoTerapeuta?e.classList.add("ocultar"):3===pasoTerapeuta&&t.classList.add("ocultar")):console.error("No se encontraron los botones de paginación")}function paginaAnteriorTerapeuta(){const e=document.querySelector("#app .paginacion #anterior");e&&e.addEventListener("click",(function(){pasoTerapeuta<=1||(pasoTerapeuta--,botonesPaginadorTerapeuta(),mostrarSeccionTerapeuta())}))}function paginaSiguienteTerapeuta(){const e=document.querySelector("#app .paginacion #siguiente");e&&e.addEventListener("click",(function(){pasoTerapeuta>=3||(pasoTerapeuta++,botonesPaginadorTerapeuta(),mostrarSeccionTerapeuta())}))}async function registrarTratamiento(e){const t=(new Date).toISOString().split("T")[0],{value:a,isConfirmed:r}=await Swal.fire({title:"Registrar Tratamiento",html:`<form id="swal-tratamiento-form">\n                <div class="swal2-input-container">\n                    <label for="swal-fecha">Fecha del tratamiento</label>\n                    <input id="swal-fecha" type="date" class="swal2-input" value="${t}" required>\n                </div>\n                <div class="swal2-input-container">\n                    <label for="swal-notas">Notas del tratamiento</label>\n                    <textarea id="swal-notas" class="swal2-textarea" placeholder="Describa el tratamiento realizado"></textarea>\n                </div>\n            </form>`,focusConfirm:!1,showCancelButton:!0,confirmButtonText:"Guardar",cancelButtonText:"Cancelar",preConfirm:()=>{const e=document.getElementById("swal-fecha").value,t=document.getElementById("swal-notas").value;return e?{fecha:e,notas:t}:(Swal.showValidationMessage("La fecha es obligatoria"),!1)}});if(r&&a)try{Swal.fire({title:"Procesando...",text:"Registrando el tratamiento",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const t=new FormData;t.append("cita_id",e),t.append("fecha",a.fecha),t.append("notas",a.notas),t.append("registrar_tratamiento","1"),console.log("Enviando datos:",{cita_id:e,fecha:a.fecha,notas:a.notas});const r=await fetch("/terapeuta/index",{method:"POST",body:t});if(r.redirected||r.url.includes("?exito="))return console.log("Tratamiento registrado correctamente, redirigiendo..."),void Swal.fire({title:"¡Tratamiento Registrado!",text:"El tratamiento ha sido registrado correctamente.",icon:"success",confirmButtonText:"OK"}).then((()=>{window.location.reload()}));const o=await r.text();console.log("Respuesta del servidor:",o);let i=o;if(o.includes("<br />")||o.includes("<b>")){const e=o.match(/(\{.*\})/s);if(!e)return console.error("No se pudo extraer JSON de la respuesta"),void Swal.fire({title:"Error",text:"Error al procesar la respuesta del servidor",icon:"error",confirmButtonText:"OK"});i=e[0],console.log("JSON extraído de la respuesta:",i)}try{const e=JSON.parse(i);e.resultado?Swal.fire({title:"¡Tratamiento Registrado!",text:"El tratamiento ha sido registrado correctamente.",icon:"success",confirmButtonText:"OK"}).then((()=>{window.location.reload()})):Swal.fire({title:"Error",text:e.mensaje||"Error al registrar el tratamiento",icon:"error",confirmButtonText:"OK"})}catch(e){console.error("Error al analizar respuesta JSON:",e),Swal.fire({title:"Error",text:"Error al procesar la respuesta del servidor",icon:"error",confirmButtonText:"OK"})}}catch(e){console.error("Error al enviar solicitud:",e),Swal.fire({title:"Error",text:`Error de conexión: ${e.message}`,icon:"error",confirmButtonText:"OK"})}}function verDetalles(e){console.log("Viendo detalles de cita:",e),alert(`Ver detalles para cita ID: ${e}. Implementar lógica.`)}function asignarEventosBotonesCitas(){document.querySelectorAll(".registrar-tratamiento").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>registrarTratamiento(t)))})),document.querySelectorAll(".ver-detalles").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>verDetalles(t)))})),document.querySelectorAll(".cancelar-cita").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>cancelarCita(t)))}))}async function confirmarTratamiento(e){console.log("Intentando registrar tratamiento para cita:",e);const{isConfirmed:t}=await Swal.fire({title:"Confirmar Tratamiento",text:"¿Desea registrar este tratamiento como completado? Esto confirmará la cita.",icon:"question",showCancelButton:!0,confirmButtonColor:"#ff7f00",cancelButtonColor:"#6c757d",confirmButtonText:"Sí, confirmar",cancelButtonText:"Cancelar"});if(t)try{Swal.fire({title:"Procesando...",text:"Registrando el tratamiento",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const t=new FormData;t.append("cita_id",e),t.append("accion","confirmar");const a=await fetch("/api/citas/estado",{method:"POST",body:t}),r=await a.text();let o;console.log("Texto de respuesta:",r);try{o=JSON.parse(r),console.log("Resultado JSON:",o)}catch(e){return console.error("Error al parsear respuesta como JSON:",e),void Swal.fire({title:"Error",text:"Error en la respuesta del servidor",icon:"error",confirmButtonColor:"#3085d6",confirmButtonText:"OK"})}o.resultado?Swal.fire({title:"¡Tratamiento Registrado!",text:"El tratamiento ha sido registrado correctamente y la cita ha sido confirmada.",icon:"success",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"}).then((()=>{window.location.reload()})):Swal.fire({title:"Error",text:o.mensaje||"Error al registrar el tratamiento",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}catch(e){console.error("Error:",e),Swal.fire({title:"Error",text:"Error de conexión",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}}async function cancelarCita(e){console.log("Iniciando proceso de cancelación para cita ID:",e);const{value:t,isConfirmed:a}=await Swal.fire({title:"Cancelar Cita",text:"Por favor, indique el motivo de la cancelación:",input:"textarea",inputPlaceholder:"Escribe el motivo aquí...",showCancelButton:!0,confirmButtonColor:"#ff7f00",cancelButtonColor:"#999",confirmButtonText:"Cancelar Cita",cancelButtonText:"Volver",inputValidator:e=>{if(!e.trim())return"Por favor ingresa un motivo para la cancelación"}});if(a)try{const a=new FormData;a.append("cita_id",e),a.append("accion","cancelar"),a.append("motivo",t),Swal.fire({title:"Procesando...",text:"Cancelando la cita",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const r=await fetch("/api/citas/estado",{method:"POST",body:a});if(!r.ok)throw new Error(`Error HTTP: ${r.status}`);let o;try{o=await r.json()}catch(e){await r.text();throw new Error("Error al procesar la respuesta del servidor")}o.resultado?Swal.fire({title:"¡Cita Cancelada!",text:"La cita ha sido cancelada correctamente",icon:"success",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"}).then((()=>{window.location.reload()})):Swal.fire({title:"Error",text:o.mensaje||"Error al cancelar la cita",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}catch(e){console.error("Error en try/catch:",e),console.error("Mensaje de error:",e.message),console.error("Stack trace:",e.stack),Swal.fire({title:"Error",text:`Error de conexión: ${e.message}`,icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}else console.log("Usuario canceló el diálogo")}function mostrarAlerta(e,t){const a=document.querySelector(".alerta-js");a&&a.remove();const r=document.createElement("DIV");r.textContent=e,r.classList.add("alerta-js",t);const o=document.querySelector(`#paso-${pasoTerapeuta}`);o.insertBefore(r,o.firstChild),setTimeout((()=>{r.remove()}),3e3)}function inicializarIndicadorScroll(){const e=document.querySelector(".listado-citas"),t=document.querySelector(".scroll-indicator.scroll-down"),a=document.querySelector(".scroll-indicator.scroll-up");function r(){const r=e.scrollTop,o=e.scrollHeight,i=e.clientHeight,n=r>20,c=Math.ceil(r+i)<o-20;n?a.classList.remove("hide"):a.classList.add("hide"),c?t.classList.remove("hide"):t.classList.add("hide"),o<=i&&(a.classList.add("hide"),t.classList.add("hide"))}e&&t&&a&&(t.classList.add("hide"),a.classList.add("hide"),r(),e.addEventListener("scroll",r),window.addEventListener("resize",r),t.addEventListener("click",(()=>{e.scrollBy({top:300,behavior:"smooth"})})),a.addEventListener("click",(()=>{e.scrollBy({top:-300,behavior:"smooth"})})))}async function cargarHistorialTratamientos(){try{console.log("Cargando historial de tratamientos para terapeuta:",window.terapeutaId);const e=await fetch(`/api/tratamientos?terapeutaId=${window.terapeutaId}`);if(!e.ok)throw new Error(`Error HTTP: ${e.status}`);const t=await e.json(),a=document.querySelector("#historial-tratamientos");if(a.innerHTML="",!t||0===t.length)return void(a.innerHTML='<p class="text-center alerta info">No hay tratamientos registrados.</p>');const r=document.createElement("ul");r.className="listado-tratamientos",t.forEach((e=>{const t=document.createElement("li");t.className="tratamiento-item";const a=e.cita_id?`Cita #${e.cita_id}`:`Tratamiento #${e.id}`;t.innerHTML=`\n                <div class="tratamiento-info">\n                    <h3>${a}</h3>\n                    <p><strong>Fecha:</strong> ${formatearFecha(e.fecha)}</p>\n                    <p><strong>Notas:</strong> ${e.notas||"Sin notas"}</p>\n                </div>\n            `,r.appendChild(t)})),a.appendChild(r),setTimeout(inicializarIndicadoresScrollHistorial,100)}catch(e){console.error("Error al cargar historial de tratamientos:",e);document.querySelector("#historial-tratamientos").innerHTML=`<p class="text-center alerta error">Error al cargar historial: ${e.message}</p>`}}function inicializarIndicadoresScrollHistorial(){const e=document.querySelector(".listado-historico");if(!e)return;let t=document.querySelector("#historial-scroll-down"),a=document.querySelector("#historial-scroll-up");function r(){const r=e.scrollTop,o=e.scrollHeight,i=e.clientHeight,n=r>20,c=Math.ceil(r+i)<o-20;n?a.classList.remove("hide"):a.classList.add("hide"),c?t.classList.remove("hide"):t.classList.add("hide"),o<=i&&(a.classList.add("hide"),t.classList.add("hide"))}t||(t=document.createElement("div"),t.id="historial-scroll-down",t.className="scroll-indicator scroll-down",t.innerHTML='<span>Más tratamientos abajo</span><div class="arrow-down"></div>',e.parentNode.appendChild(t)),a||(a=document.createElement("div"),a.id="historial-scroll-up",a.className="scroll-indicator scroll-up",a.innerHTML='<span>Más tratamientos arriba</span><div class="arrow-up"></div>',e.parentNode.appendChild(a)),t.classList.add("hide"),a.classList.add("hide"),r(),e.addEventListener("scroll",r),window.addEventListener("resize",r),t.addEventListener("click",(()=>{e.scrollBy({top:300,behavior:"smooth"})})),a.addEventListener("click",(()=>{e.scrollBy({top:-300,behavior:"smooth"})}))}function formatearFecha(e){return new Date(e).toLocaleDateString("es-ES",{day:"2-digit",month:"2-digit",year:"numeric"})}document.addEventListener("DOMContentLoaded",(function(){console.log("Terapeuta script loaded"),iniciarAppTerapeuta()})),document.addEventListener("DOMContentLoaded",(()=>{tabsTerapeuta();document.querySelectorAll(".registrar-tratamiento").forEach((e=>{e.addEventListener("click",(()=>{registrarTratamiento(e.dataset.idCita)}))}));document.querySelectorAll(".cancelar-cita").forEach((e=>{e.addEventListener("click",(()=>{cancelarCita(e.dataset.idCita)}))}));const e=document.querySelector('[data-paso="3"]');e&&e.addEventListener("click",(()=>{cargarHistorialTratamientos()})),3===pasoTerapeuta&&cargarHistorialTratamientos()}));
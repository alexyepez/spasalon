let pasoTerapeuta=1;const pasoInicialTerapeuta=1,pasoFinalTerapeuta=3;function iniciarAppTerapeuta(){mostrarSeccionTerapeuta(),tabsTerapeuta(),botonesPaginadorTerapeuta(),paginaSiguienteTerapeuta(),paginaAnteriorTerapeuta(),asignarEventosBotonesCitas()}function mostrarSeccionTerapeuta(){const e=document.querySelector("#app .seccion.mostrar");e&&e.classList.remove("mostrar");const t=`#paso-${pasoTerapeuta}`,a=document.querySelector(`#app .seccion${t}`);a?a.classList.add("mostrar"):console.error("No se encontró la sección:",t);const o=document.querySelector("#app .tabs button.actual");o&&o.classList.remove("actual");const r=document.querySelector(`#app .tabs button[data-paso="${pasoTerapeuta}"]`);r?r.classList.add("actual"):console.error("No se encontró el tab:",`[data-paso="${pasoTerapeuta}"]`),2===pasoTerapeuta&&setTimeout(inicializarIndicadorScroll,100)}function tabsTerapeuta(){document.querySelectorAll("#app .tabs button").forEach((e=>{e.addEventListener("click",(function(e){pasoTerapeuta=parseInt(e.target.dataset.paso),mostrarSeccionTerapeuta(),botonesPaginadorTerapeuta()}))}))}function botonesPaginadorTerapeuta(){const e=document.querySelector("#app .paginacion #anterior"),t=document.querySelector("#app .paginacion #siguiente");e&&t?(e.classList.remove("ocultar"),t.classList.remove("ocultar"),1===pasoTerapeuta?e.classList.add("ocultar"):3===pasoTerapeuta&&t.classList.add("ocultar")):console.error("No se encontraron los botones de paginación")}function paginaAnteriorTerapeuta(){const e=document.querySelector("#app .paginacion #anterior");e&&e.addEventListener("click",(function(){pasoTerapeuta<=1||(pasoTerapeuta--,botonesPaginadorTerapeuta(),mostrarSeccionTerapeuta())}))}function paginaSiguienteTerapeuta(){const e=document.querySelector("#app .paginacion #siguiente");e&&e.addEventListener("click",(function(){pasoTerapeuta>=3||(pasoTerapeuta++,botonesPaginadorTerapeuta(),mostrarSeccionTerapeuta())}))}function registrarTratamiento(e){console.log("Intentando registrar tratamiento para cita:",e),alert(`Registrar tratamiento para cita ID: ${e}. Implementar lógica.`)}function verDetalles(e){console.log("Viendo detalles de cita:",e),alert(`Ver detalles para cita ID: ${e}. Implementar lógica.`)}function asignarEventosBotonesCitas(){document.querySelectorAll(".registrar-tratamiento").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>registrarTratamiento(t)))})),document.querySelectorAll(".ver-detalles").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>verDetalles(t)))})),document.querySelectorAll(".cancelar-cita").forEach((e=>{const t=e.getAttribute("data-id-cita");t&&e.addEventListener("click",(()=>cancelarCita(t)))}))}async function registrarTratamiento(e){console.log("Intentando registrar tratamiento para cita:",e);const{isConfirmed:t}=await Swal.fire({title:"Confirmar Tratamiento",text:"¿Desea registrar este tratamiento como completado? Esto confirmará la cita.",icon:"question",showCancelButton:!0,confirmButtonColor:"#ff7f00",cancelButtonColor:"#6c757d",confirmButtonText:"Sí, confirmar",cancelButtonText:"Cancelar"});if(t)try{Swal.fire({title:"Procesando...",text:"Registrando el tratamiento",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const t=new FormData;t.append("cita_id",e),t.append("accion","confirmar");const a=await fetch("/api/citas/estado",{method:"POST",body:t}),o=await a.text();let r;console.log("Texto de respuesta:",o);try{r=JSON.parse(o),console.log("Resultado JSON:",r)}catch(e){return console.error("Error al parsear respuesta como JSON:",e),void Swal.fire({title:"Error",text:"Error en la respuesta del servidor",icon:"error",confirmButtonColor:"#3085d6",confirmButtonText:"OK"})}r.resultado?Swal.fire({title:"¡Tratamiento Registrado!",text:"El tratamiento ha sido registrado correctamente y la cita ha sido confirmada.",icon:"success",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"}).then((()=>{window.location.reload()})):Swal.fire({title:"Error",text:r.mensaje||"Error al registrar el tratamiento",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}catch(e){console.error("Error:",e),Swal.fire({title:"Error",text:"Error de conexión",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}}async function cancelarCita(e){console.log("Iniciando proceso de cancelación para cita ID:",e);const{value:t,isConfirmed:a}=await Swal.fire({title:"Cancelar Cita",text:"Por favor, indique el motivo de la cancelación:",input:"textarea",inputPlaceholder:"Escribe el motivo aquí...",showCancelButton:!0,confirmButtonColor:"#ff7f00",cancelButtonColor:"#999",confirmButtonText:"Cancelar Cita",cancelButtonText:"Volver",inputValidator:e=>{if(!e.trim())return"Por favor ingresa un motivo para la cancelación"}});if(a)try{const a=new FormData;a.append("cita_id",e),a.append("accion","cancelar"),a.append("motivo",t),Swal.fire({title:"Procesando...",text:"Cancelando la cita",allowOutsideClick:!1,didOpen:()=>{Swal.showLoading()}});const o=await fetch("/api/citas/estado",{method:"POST",body:a});if(!o.ok)throw new Error(`Error HTTP: ${o.status}`);let r;try{r=await o.json()}catch(e){await o.text();throw new Error("Error al procesar la respuesta del servidor")}r.resultado?Swal.fire({title:"¡Cita Cancelada!",text:"La cita ha sido cancelada correctamente",icon:"success",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"}).then((()=>{window.location.reload()})):Swal.fire({title:"Error",text:r.mensaje||"Error al cancelar la cita",icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}catch(e){console.error("Error en try/catch:",e),console.error("Mensaje de error:",e.message),console.error("Stack trace:",e.stack),Swal.fire({title:"Error",text:`Error de conexión: ${e.message}`,icon:"error",confirmButtonColor:"#ff7f00",confirmButtonText:"OK"})}else console.log("Usuario canceló el diálogo")}function mostrarAlerta(e,t){const a=document.querySelector(".alerta-js");a&&a.remove();const o=document.createElement("DIV");o.textContent=e,o.classList.add("alerta-js",t);const r=document.querySelector(`#paso-${pasoTerapeuta}`);r.insertBefore(o,r.firstChild),setTimeout((()=>{o.remove()}),3e3)}function inicializarIndicadorScroll(){const e=document.querySelector(".listado-citas"),t=document.querySelector(".scroll-indicator.scroll-down"),a=document.querySelector(".scroll-indicator.scroll-up");function o(){const o=e.scrollTop,r=e.scrollHeight,n=e.clientHeight,c=o>20,i=Math.ceil(o+n)<r-20;c?a.classList.remove("hide"):a.classList.add("hide"),i?t.classList.remove("hide"):t.classList.add("hide"),r<=n&&(a.classList.add("hide"),t.classList.add("hide"))}e&&t&&a&&(t.classList.add("hide"),a.classList.add("hide"),o(),e.addEventListener("scroll",o),window.addEventListener("resize",o),t.addEventListener("click",(()=>{e.scrollBy({top:300,behavior:"smooth"})})),a.addEventListener("click",(()=>{e.scrollBy({top:-300,behavior:"smooth"})})))}document.addEventListener("DOMContentLoaded",(function(){console.log("Terapeuta script loaded"),iniciarAppTerapeuta()}));